AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Lambdaless API

Parameters:
  Table: {Default: products, Type: String}  

Globals:
  Function:
    Timeout: 10
    Runtime: nodejs12.x
    Tags:
      service: lambdaless-api

Resources:
  ProductsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: products
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 3

  ProductsAPIRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - apigateway.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        -
          PolicyName: ProductsAPIPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              -
                Effect: Allow
                Action:
                  - "dynamodb:PutItem"
                Resource: !GetAtt ProductsTable.Arn

  ProductsAPI:
    Type: AWS::Serverless::Api
    Properties:
        StageName: Lambdaless
        DefinitionBody:
            openapi: 3.0.1
            info:
              title:
                Ref: AWS::StackName
            paths:
              "/products":
                put:
                  consumes:
                    - "application/json"
                  produces:
                    - "application/json"
                  responses:
                    "200":
                      description: "200 response"
                      schema:
                        $ref: "#/definitions/Empty"
                  x-amazon-apigateway-integration:
                    httpMethod: POST
                    type: AWS
                    uri: { "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:dynamodb:action/PutItem" }
                    credentials: { "Fn::GetAtt": [ ProductsAPIRole, Arn ] }
                    requestTemplates:
                      application/json: { 'Fn::Sub': "{ \n\
                      \t\"TableName\": \"${Table}\",\n\
                      \t\"Item\": {\n\
                      \t\t\"pk\": {\n\
                      \t\t\t\"S\": \"$input.path('$.PageId')\"\n\
                      \t\t},\n\
                      \t\t\"EventCount\": {\n\
                      \t\t\t\"N\": \"$input.path('$.EventCount')\"\n\
                      \t\t},\n\
                      \t\t\"Message\": {\n\
                      \t\t\t\"S\": \"$input.path('$.Message')\"\n\
                      \t\t}\n
                      \t}\n}" }
                    responses:
                      default:
                        statusCode: "200"
